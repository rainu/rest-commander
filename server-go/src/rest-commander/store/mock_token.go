// Automatically generated by MockGen. DO NOT EDIT!
// Source: ./store/token.go

package store

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of TokenStore interface
type MockTokenStore struct {
	ctrl     *gomock.Controller
	recorder *_MockTokenStoreRecorder
}

// Recorder for MockTokenStore (not exported)
type _MockTokenStoreRecorder struct {
	mock *MockTokenStore
}

func NewMockTokenStore(ctrl *gomock.Controller) *MockTokenStore {
	mock := &MockTokenStore{ctrl: ctrl}
	mock.recorder = &_MockTokenStoreRecorder{mock}
	return mock
}

func (_m *MockTokenStore) EXPECT() *_MockTokenStoreRecorder {
	return _m.recorder
}

func (_m *MockTokenStore) Get(token string) *AuthenticationToken {
	ret := _m.ctrl.Call(_m, "Get", token)
	ret0, _ := ret[0].(*AuthenticationToken)
	return ret0
}

func (_mr *_MockTokenStoreRecorder) Get(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0)
}

func (_m *MockTokenStore) Contains(token string) bool {
	ret := _m.ctrl.Call(_m, "Contains", token)
	ret0, _ := ret[0].(bool)
	return ret0
}

func (_mr *_MockTokenStoreRecorder) Contains(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Contains", arg0)
}

func (_m *MockTokenStore) Add(token *AuthenticationToken) {
	_m.ctrl.Call(_m, "Add", token)
}

func (_mr *_MockTokenStoreRecorder) Add(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Add", arg0)
}

func (_m *MockTokenStore) Remove(token string) {
	_m.ctrl.Call(_m, "Remove", token)
}

func (_mr *_MockTokenStoreRecorder) Remove(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Remove", arg0)
}
