// Automatically generated by MockGen. DO NOT EDIT!
// Source: ./controller/auth_handler.go

package controller

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
)

// Mock of AuthenticationController interface
type MockAuthenticationController struct {
	ctrl     *gomock.Controller
	recorder *_MockAuthenticationControllerRecorder
}

// Recorder for MockAuthenticationController (not exported)
type _MockAuthenticationControllerRecorder struct {
	mock *MockAuthenticationController
}

func NewMockAuthenticationController(ctrl *gomock.Controller) *MockAuthenticationController {
	mock := &MockAuthenticationController{ctrl: ctrl}
	mock.recorder = &_MockAuthenticationControllerRecorder{mock}
	return mock
}

func (_m *MockAuthenticationController) EXPECT() *_MockAuthenticationControllerRecorder {
	return _m.recorder
}

func (_m *MockAuthenticationController) HandleLogin(w http.ResponseWriter, r *http.Request) {
	_m.ctrl.Call(_m, "HandleLogin", w, r)
}

func (_mr *_MockAuthenticationControllerRecorder) HandleLogin(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "HandleLogin", arg0, arg1)
}

func (_m *MockAuthenticationController) HandleLogout(w http.ResponseWriter, r *http.Request) {
	_m.ctrl.Call(_m, "HandleLogout", w, r)
}

func (_mr *_MockAuthenticationControllerRecorder) HandleLogout(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "HandleLogout", arg0, arg1)
}
